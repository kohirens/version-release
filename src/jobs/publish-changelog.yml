description: |2
  Commit changes to the changelog and merge into a remote branch using the
  process:

  1. Configure Git to allow a commit.
  2. Making a new branch.
  3. Detect and commit the changes to the CHANGELOG, if none, then exit.
  4. Pushing the branch back to remote GitHub.
  5. Use the GitHub CLI to make a PR.
  6. Then immediately merge the changes in the desired branch.

  We use a PR instead of a push in case the branch is protected from direct
  pushes.
parameters:
  add_files_to_commit:
    default: ""
    description: |2
      A text file (UTF-8) containing 1 file per line to add along with the
      changelog commit. The path should be relative to the root of the
      repository. Line endings can be Linux, Mac, or Windows. These are usually
      files that need to be generated with the next semantic tag or other
      release information.
    type: string
  attach_workspace_path:
    default: "."
    description: Set where to attach the workspace.
    type: string
  changelog_file:
    default: "CHANGELOG.md"
    description: Location to output/update the CHANGELOG file.
    type: string
  committer_email:
    default: ""
    description: Git user email address to use when commiting the changelog.
    type: string
  committer_gpg_key:
    default: ""
    description: Git user GPG key to use when commiting the changelog.
    type: string
  committer_name:
    default: ""
    description: Git username to use when commiting the changelog.
    type: string
  do_attach_workspace:
    default: false
    description: >
      Set this to `true` to attaching the workspace or false to skip this step.
      If you do set this to false, then you may want to set `do_checkout` to
      true.
    type: boolean
  do_checkout:
    default: true
    description: >
      Set this to true to perform a checkout step, or false to skip.
      If you do set this to false, then you may want to set
      `do_attach_workspace` to true.
    type: boolean
  exec_img_tag:
    default: "VERSION_RELEASE_IMAGE"
    description: Version of the executor image to pull.
    type: string
  github_api_url:
    default: "https://api.github.com"
    description: Github API URL.
    type: string
  main_trunk_branch:
    default: "main"
    description: Name of the main trunk branch to tag.
    type: string
  merge_type:
    default: "rebase"
    description: Type of merge to perform, choose between merge|squash|rebase.
    type: enum
    enum: [ "merge", "rebase", "squash" ]
  tag_cmd:
      default: ""
      description: |2
        Command to run to get the semantic version tag, will override the auto
        generated value.
      type: string
  tag_env_var:
      default: ""
      description: |2
        Environment variable to get the semantic version tag, will override the
        auto generated value.
      type: string
  tag_file:
      default: ""
      description: |2
        File to get the semantic version tag, will override the auto generated
        value.
      type: string
  working_directory:
    default: .
    description: In case you need to customize, defaults to the current dir.
    type: string

executor:
  name: default
  exec_img_tag: << parameters.exec_img_tag >>

steps:
  - when:
      condition: << parameters.do_checkout >>
      steps:
        - checkout
  - when:
      condition: << parameters.do_attach_workspace >>
      steps:
        - attach_workspace:
            at: "<< parameters.attach_workspace_path >>"
  - run:
      environment:
        GITHUB_API_URL: "<< parameters.github_api_url >>"
        PARAM_ADD_FILES_TO_COMMIT: "<< parameters.add_files_to_commit >>"
        PARAM_CHANGELOG_FILE: "<< parameters.changelog_file >>"
        PARAM_COMMITTER_EMAIL: "<< parameters.committer_email >>"
        PARAM_COMMITTER_GPG_KEY: "<< parameters.committer_gpg_key >>"
        PARAM_COMMITTER_NAME: "<< parameters.committer_name >>"
        PARAM_MAIN_TRUNK_BRANCH: "<< parameters.main_trunk_branch >>"
        PARAM_MERGE_TYPE: "<< parameters.merge_type >>"
        PARAM_TAG_CMD: "<< parameters.tag_cmd >>"
        PARAM_TAG_ENV_VAR: "<< parameters.tag_env_var >>"
        PARAM_TAG_FILE: "<< parameters.tag_file >>"
        PARAM_WORKING_DIRECTORY: "<< parameters.working_directory >>"
      name: Commit and rebase the CHANGELOG updates
      command: << include(scripts/publish-changelog.sh) >>
