description: |2
  Commit changes to the changelog and merge into a remote branch using the process:

  1. Configure Git to allow a commit.
  2. Making a new branch.
  3. Detect and commit the changes to the CHANGELOG, if none, then exit.
  4. Pushing the branch back to remote GitHub.
  5. Use the GitHub CLI to make a PR.
  6. Then immediately merge the changes in the desired branch.

  We use a PR instead of a push in case the branch is protected from direct pushes.
parameters:
  branch:
    description: Name of the branch to merge into.
    type: string
    default: "main"
  changelogFile:
    description: Location of the CHANGELOG file.
    type: string
    default: "CHANGELOG.md"
  chglogConfDir:
    description: Location to output/update the CHANGELOG file.
    type: string
    default: ".chglog"
  commitFile:
    description: Name of the file to set the commit hash to tag.
    type: string
    default: "commit-to-tag.txt"
  configFile:
    type: string
    default: ".chglog/config.yml"
    description: Location of a git-chglog configuration file.
  do_checkout:
    description: In case you need to customize.
    type: boolean
    default: true
  ghToken:
    description: Name of the environment variable holding the GitHub API token.
    type: env_var_name
    default: GH_TOKEN
  mergeType:
    description: Type of merge to perform, choose between merge|squash|rebase.
    type: enum
    enum: [ "merge", "rebase", "squash" ]
    default: "rebase"
  outputFile:
    description: Location to output/update the CHANGELOG file.
    type: string
    default: "CHANGELOG.md"
  sshFinger:
    description: Fingerprint of an SSH key that can be used to perform a merge into a branch.
    type: string
  working_directory:
    description: In case you need to customize.
    type: string
    default: "~/project"

executor: default
working_directory: "<< parameters.working_directory >>"
steps:
  - when:
      condition: << parameters.do_checkout >>
      steps:
        - checkout
  - add_ssh_keys:
      fingerprints:
        - << parameters.sshFinger >>
  - add-missing-chglog-config:
      configFile: "<< parameters.configFile >>"
  - git-chglog-update:
      configFile: "<< parameters.configFile >>"
      outputFile: "<< parameters.outputFile >>"
  - run:
      environment:
        PARAM_CHANGELOG_FILE: "<< parameters.changelogFile >>"
        PARAM_BRANCH: "<< parameters.branch >>"
        PARAM_MERGE_TYPE: "<< parameters.mergeType >>"
        PARAM_COMMIT_FILE: "<< parameters.commitFile >>"
        PARAM_CONFIGFILE: "<< parameters.configFile >>" # TODO: Rename in next release to PARAM_CONFIG_FILE
      name: Commit and merge the CHANGELOG updates
      command: << include(scripts/publish-changelog.sh) >>
  - persist_to_workspace:
      root: "."
      paths: [ "<< parameters.commitFile >>", "<< parameters.chglogConfDir >>"]
